{"app": "common",
 "inst": [
  {"args": ["perl::Canned<const pm::cascaded_iterator<pm::unary_transform_iterator<pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::Undirected, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::graph::incident_edge_list, void> >, pm::operations::masquerade<pm::graph::uniq_edge_list> >, mlist<pm::end_sensitive>, 2>&>"], "func": "from_node", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "from_node:M"},
  {"args": ["perl::Canned<const pm::cascaded_iterator<pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::Directed, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::graph::incident_edge_list, void> >, mlist<pm::end_sensitive>, 2>&>"], "func": "from_node", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "from_node:M"},
  {"args": ["perl::Canned<const pm::cascaded_iterator<pm::unary_transform_iterator<pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::UndirectedMulti, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::graph::incident_edge_list, void> >, pm::operations::masquerade<pm::graph::uniq_edge_list> >, mlist<pm::end_sensitive>, 2>&>"], "func": "from_node", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "from_node:M"},
  {"args": ["perl::Canned<const pm::cascaded_iterator<pm::unary_transform_iterator<pm::graph::valid_node_iterator<pm::iterator_range<pm::ptr_wrapper<pm::graph::node_entry<pm::graph::DirectedMulti, (pm::sparse2d::restriction_kind)0> const, false> >, pm::BuildUnary<pm::graph::valid_node_selector> >, pm::graph::line_factory<std::integral_constant<bool, true>, pm::graph::incident_edge_list, void> >, mlist<pm::end_sensitive>, 2>&>"], "func": "from_node", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "from_node:M"},
  {"args": ["perl::Canned<const pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::graph::it_traits<pm::graph::Undirected, false> const, (pm::AVL::link_index)1>, std::pair<pm::graph::edge_accessor, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > >&>"], "func": "from_node", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "from_node:M"},
 null ],
"version": 3}
