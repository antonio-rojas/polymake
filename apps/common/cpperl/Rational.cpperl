{"app": "common",
 "inst": [
  {"class": "Rational", "include": ["polymake/Rational.h"], "pkg": "Polymake::common::Rational"},
  {"args": ["perl::Canned<Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X16"},
  {"args": ["perl::Canned<const Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<double, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Rational, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Rational", "perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Rational, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Rational, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Rational>&>", "perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Rational, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Rational, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Rational>&>", "long"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X16"},
  {"args": ["Rational", "int", "int"], "include": ["polymake/Rational.h"], "op": "new", "sig": "new.X.X"},
  {"args": ["perl::Canned<const Rational&>", "double"], "include": ["polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["Rational", "double"], "include": ["polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "Sub", "ret": "lvalue", "sig": "Sub:O.X1.X16"},
  {"args": ["Rational", "int"], "include": ["polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["long", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<const Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, int>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, Rational>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, int>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, int>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, Rational>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, Rational>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["Rational"], "include": ["polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<Rational&>"], "include": ["polymake/Rational.h"], "op": "inc", "ret": "lvalue", "sig": "inc:O.X1"},
  {"args": ["perl::Canned<Rational&>"], "include": ["polymake/Rational.h"], "op": "dec", "ret": "lvalue", "sig": "dec:O.X1"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "rsh", "sig": "rsh:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "lsh", "sig": "lsh:O.X.X"},
  {"args": ["perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["long", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["long", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["long", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["int", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["int", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["Rational", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "Sub", "ret": "lvalue", "sig": "Sub:O.X1.X16"},
  {"args": ["perl::Canned<Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X16"},
  {"args": ["perl::Canned<Rational&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X1.X16"},
  {"args": ["perl::Canned<Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X1.X16"},
  {"args": ["perl::Canned<Rational&>", "long"], "include": ["polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["Rational", "perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X"},
  {"args": ["Rational", "int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X"},
  {"args": ["Rational", "perl::Canned<const Integer&>", "int"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const UniPolynomial<Rational, int>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["Rational", "long", "long"], "include": ["polymake/Rational.h"], "op": "new", "sig": "new.X.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const Polynomial<Rational, int>&>"], "include": ["polymake/Polynomial.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["Rational", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Rational", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "_le", "sig": "_le:O.X.X"},
  {"args": ["perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "boo", "sig": "boo:O.X"},
  {"args": ["perl::Canned<Rational&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "Sub", "ret": "lvalue", "sig": "Sub:O.X1.X16"},
  {"args": ["perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "not", "sig": "not:O.X"},
  {"args": ["perl::Canned<const Rational&>", "int"], "include": ["polymake/Rational.h"], "op": "_ge", "sig": "_ge:O.X.X"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Rational&>", "perl::Canned<const pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>&>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X.X16"},
 null ],
"version": 3}
