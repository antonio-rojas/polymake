{"app": "common",
 "inst": [
  {"args": ["perl::Canned<const UniPolynomial<TropicalNumber<Max, Rational>, int>&>", "perl::Canned<const TropicalNumber<Max, Rational>&>"], "func": "substitute", "include": ["polymake/Rational.h", "polymake/RationalFunction.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<TropicalNumber<Max, Rational>, int>&>", "perl::Canned<const UniPolynomial<TropicalNumber<Max, Rational>, int>&>"], "func": "substitute", "include": ["polymake/Rational.h", "polymake/RationalFunction.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>", "int"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>", "perl::Canned<const Rational&>"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "int"], "func": "substitute", "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "perl::Canned<const Rational&>"], "func": "substitute", "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "perl::Canned<const Matrix<Rational>&>"], "func": "substitute", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "perl::Canned<const UniPolynomial<Rational, int>&>"], "func": "substitute", "include": ["polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>", "perl::Canned<const UniPolynomial<Rational, int>&>"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>", "perl::Canned<const UniPolynomial<QuadraticExtension<Rational>, int>&>"], "func": "substitute", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, int>&>", "perl::Canned<const Polynomial<Rational, int>&>"], "func": "substitute", "include": ["polymake/Polynomial.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const Polynomial<Rational, int>&>", "perl::Canned<const Map<int, Rational>&>"], "func": "substitute", "include": ["polymake/Map.h", "polymake/Polynomial.h", "polymake/Rational.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const Polynomial<Rational, int>&>", "perl::Canned<const Map<int, QuadraticExtension<Rational>>&>"], "func": "substitute", "include": ["polymake/Map.h", "polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "kind": "meth", "sig": "substitute:M.X"},
  {"args": ["perl::Canned<const Polynomial<Rational, int>&>", "perl::TryCanned<const Array<int>>"], "func": "substitute", "include": ["polymake/Array.h", "polymake/Polynomial.h", "polymake/Rational.h"], "kind": "meth", "sig": "substitute:M.X"},
 null ],
"version": 3}
