#  Copyright (c) 1997-2015
#  Ewgenij Gawrilow, Michael Joswig (Technische Universitaet Berlin, Germany)
#  http://www.polymake.org
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#-------------------------------------------------------------------------------

# @topic application
# This application concentrates on [[Hypersurface|tropical hypersurfaces]] and [[TropicalPolytope|tropical polytopes]].
# It provides the functionality for the computation of basic properties. Visualization and various constructions are possible.

IMPORT common graph

USE polytope fan graph

file_suffix trop


HELP
	help.rules


##################################################################################

# A __tropical polytope__ is the tropical convex hull of finitely many points in the tropical (d-1)-torus, as introduced by Develin and Sturmfels.
# One construction is via the bounded subcomplex of an unbounded ordinary convex polyhedron.
# 
# Currently only works for Min as tropical addition (subject to change in future versions of polymake).
#

# FIXME #775:
# change Rational to TropicalNumber<Addition,Rational>; maybe Scalar instead of crational for valuations of higher rank
# change TropicalPolytope to Cone
declare object TropicalPolytope<Scalar=Rational> [ is_ordered_field_with_unlimited_precision(Scalar) ];

# A tropical cycle is a weighted, balanced, pure polyhedral complex.
# It is given as a polyhedral complex in tropical projective coordinates.
# To be precise: Each row of [[VERTICES]] and [[LINEALITY_SPACE]] 
# has a leading 1 or 0, depending on whether it is a vertex or a ray. 
# The remaining n coordinates are interpreted as an element of
# R<sup>n</sup> modulo (1,..,1).
# IMPORTANT NOTE: [[VERTICES]] are assumed to be normalized such that the first coordinate (i.e. 
# column index 1) is 0. If your input is not of that form, use [[PROJECTIVE_VERTICES]].
# Note that there is a convenience method [[thomog]], which converts affine coordinates 
# into projective coordinates.
# Its template parameter is the tropical addition.
# Warning: There is NO default for this, you have to choose either Max or Min.
declare object Cycle<Addition> : fan::PolyhedralComplex<Rational>;


declare object Hypersurface<Addition> : Cycle<Addition>;

INCLUDE
  cycle.rules
  hypersurface.rules
  cone.rules
  singular.rules
  gfan.rules
  tplib.rules
  visual.rules
  visual_cycle.rules
  #toggle.rules


# Local Variables:
# mode: perl
# cperl-indent-level: 3
# indent-tabs-mode:nil
# End:
